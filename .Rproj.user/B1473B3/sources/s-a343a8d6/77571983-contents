// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Segment
mat Segment(cube& img, mat& C, mat& img_vec, int GibbsN, double alpha, double beta, vec& mu_0, mat& Lambda_0, double v_0, mat& Sigma_0);
RcppExport SEXP _ImageSegment_Segment(SEXP imgSEXP, SEXP CSEXP, SEXP img_vecSEXP, SEXP GibbsNSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP mu_0SEXP, SEXP Lambda_0SEXP, SEXP v_0SEXP, SEXP Sigma_0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cube& >::type img(imgSEXP);
    Rcpp::traits::input_parameter< mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< mat& >::type img_vec(img_vecSEXP);
    Rcpp::traits::input_parameter< int >::type GibbsN(GibbsNSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< vec& >::type mu_0(mu_0SEXP);
    Rcpp::traits::input_parameter< mat& >::type Lambda_0(Lambda_0SEXP);
    Rcpp::traits::input_parameter< double >::type v_0(v_0SEXP);
    Rcpp::traits::input_parameter< mat& >::type Sigma_0(Sigma_0SEXP);
    rcpp_result_gen = Rcpp::wrap(Segment(img, C, img_vec, GibbsN, alpha, beta, mu_0, Lambda_0, v_0, Sigma_0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ImageSegment_Segment", (DL_FUNC) &_ImageSegment_Segment, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_ImageSegment(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
